<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Indicator</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Direction That police is going
facedir = 0;
//facedir 0= bottom going top
// 1 = top going bottom
// 2 = left going right
// 3 = right going left
//May change and make police face direction based on location of the police or
//When they go over a border
shield = noone;
alarm[0] = irandom_range(60,90);
state = "retreat";
amttomove = 0;
xrandom = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bullet = instance_create(x,y,obj_enemy_bullet);
dir = point_direction(x,y,obj_vanilla_test_obj.x+irandom_range(-5,5),obj_vanilla_test_obj.y);
bullet.dir = dir;
alarm[0] = irandom_range(60,90);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_ai_shield_test)) {
    if (shield == noone) {
        //Get Shield
        var list = ds_priority_create();
        with (obj_ai_shield_test)
            {
            if (occupied == noone)
                {
                ds_priority_add(list, id, distance_to_point(other.x, other.y));
                }
            }   
        if (ds_priority_empty(list) == false) {
                shield = ds_priority_find_min(list);
                shield.occupied = true;
        }
        ds_priority_destroy(list);
    }
    if (shield != noone) {
        if (x != shield.x &amp; y != shield.y) {
        //Start Moving To Shield Below
            if (point_distance(x,y, shield.x,shield.y+50)) &gt; 15 {
                move_towards_point(shield.x,shield.y+50,15);
            }else
            if (point_distance(x,y, shield.x,shield.y+50)) &gt; 3 {
                move_towards_point(shield.x,shield.y+50,3);
            }else 
            if (point_distance(x,y, shield.x,shield.y+50)) &gt;= 1 {
                move_towards_point(shield.x,shield.y+50,1);
            }else { 
                speed = 0;
            }
        }
    }else{
        //Do Normal None Shield Ai Here
        if (y &gt; obj_vanilla_test_obj.y - 100) {
            if (state == "nothing") {
                //Calculate a state or  just u know randomly select one?
                state = choose("retreat");
            }
            switch(state) {
            //Too Close To Player, Retreat (Check For Player Hp Next Time Also)
            case "retreat":
                if(amttomove &lt;= 0) {
                    amttomove = irandom_range(15,30);
                    xrandom = irandom_range(-3,3);
                }
                if (amttomove &gt; 0 ) {
                    if (!place_meeting(x+xrandom,y+3,obj_solid)) {
                        if ((y+3) &lt; 800 &amp;&amp; (x+xrandom) &lt; 500 &amp;&amp; (x+xrandom) &gt; 0)
                        y += 3;
                        x += xrandom;
                    }else {
                        amttomove = 0;
                    }
                }
                amttomove -= 3;
                if (amttomove &lt;= 0) {
                   state = choose("retreat");
                }
            break; 
            //Too Far To Player, Aggro
            case "aggro":
                if(amttomove &lt;= 0) {
                    amttomove = irandom_range(15,30);
                    xrandom = irandom_range(-3,3);
                }
                if (amttomove &gt; 0 ) {
                    if (!place_meeting(x+xrandom,y+3,obj_solid &amp;&amp; (y-3) &gt;0 &amp;&amp; ((x+ xrandom)*3) &lt; 500 &amp;&amp; ((x+xrandom)*3) &gt; 0)) {
                        y -= 3;
                        x += xrandom*3;
                    }else {
                        amttomove = 0;
                    }
                }
                amttomove -= 3;
                if (amttomove &lt;= 0) {
                   state = choose("retreat","aggro");
                }
            break;
            //Dance Like Michael Jackson/Just Dont Get Fking Hit
            case "dodge":
                
            break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
